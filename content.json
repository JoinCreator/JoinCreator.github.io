{"meta":{"title":"zhang","subtitle":null,"description":"罗马","author":"ZHANG","url":""},"pages":[{"title":"comment","date":"2021-12-20T15:13:48.000Z","updated":"2022-03-08T12:21:32.752Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"诗和远方！ 以铜为镜，可以正衣冠；以古为镜，可以知兴替；以人为镜，可以明得失。 《旧唐书·魏征列传》","keywords":"留言板"},{"title":"about","date":"2021-12-12T14:14:36.000Z","updated":"2022-03-08T07:26:29.909Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[SHUAI] 与&nbsp; Mashiro&nbsp; （ friends ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"donate","date":"2021-12-20T15:13:05.000Z","updated":"2022-03-08T13:43:59.461Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"感谢"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2022-03-06T10:57:44.485Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"links","date":"2021-12-19T15:11:06.000Z","updated":"2022-03-08T12:19:25.685Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友情链接"},{"title":"rss","date":"2021-12-20T15:09:03.000Z","updated":"2022-03-08T06:44:53.244Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2022-01-04T14:53:25.000Z","updated":"2022-03-08T06:43:25.155Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"","keywords":"hello"},{"title":"tags","date":"2021-12-12T14:14:16.000Z","updated":"2022-03-08T06:44:02.687Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"安装Docker","slug":"安装Docker","date":"2022-03-09T12:58:01.864Z","updated":"2022-03-09T02:03:41.367Z","comments":true,"path":"2022/03/09/安装Docker/","link":"","permalink":"/2022/03/09/安装Docker/","excerpt":"","text":"0.安装DockerDocker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。 Docker CE 分为 stable test 和 nightly 三个更新频道。 官方网站上有各种环境下的 安装指南，这里主要介绍 Docker CE 在 CentOS上的安装。 1.CentOS安装DockerDocker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10， CentOS 7 满足最低内核的要求，所以我们在CentOS 7安装Docker。 1.1.卸载（可选）如果之前安装过旧版本的Docker，可以使用下面命令卸载： yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine \\ docker-ce 1.2.安装docker首先需要大家虚拟机联网，安装yum工具 sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 --skip-broken 然后更新本地镜像源： # 设置docker镜像源 yum-config-manager \\ --add-repo \\ https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo sed -i &#39;s/download.docker.com/mirrors.aliyun.com\\/docker-ce/g&#39; /etc/yum.repos.d/docker-ce.repo yum makecache fast 然后输入命令： yum install -y docker-ce docker-ce为社区免费版本。稍等片刻，docker即可安装成功。 1.3.启动dockerDocker应用需要用到各种端口，逐一去修改防火墙设置。非常麻烦，因此建议大家直接关闭防火墙！ # 关闭 systemctl stop firewalld # 禁止开机启动防火墙 systemctl disable firewalld 通过命令启动docker： systemctl start docker # 启动docker服务 systemctl stop docker # 停止docker服务 systemctl restart docker # 重启docker服务 然后输入命令，可以查看docker版本： docker -v 1.4.配置镜像加速docker官方镜像仓库网速较差，我们需要设置国内镜像服务： 参考阿里云的镜像加速文档：https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39; { &quot;registry-mirrors&quot;:[&quot;https://n0dwemtq.mirror.aliyuncs.com&quot;] } EOF sudo systemctl daemon-reload sudo systemctl restart docker 2.CentOS7安装DockerCompose2.1.下载Linux下需要通过命令下载： # 安装 curl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose 如果下载速度较慢，或者下载失败，可以使用课前资料提供的docker-compose文件： 上传到/usr/local/bin/目录也可以。 2.2.修改文件权限修改文件权限： # 修改权限 chmod +x /usr/local/bin/docker-compose 2.3.Base自动补全命令：# 补全命令 curl -L https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose &gt; /etc/bash_completion.d/docker-compose 如果这里出现错误，需要修改自己的hosts文件： echo &quot;199.232.68.133 raw.githubusercontent.com&quot; &gt;&gt; /etc/hosts 3.Docker镜像仓库搭建镜像仓库可以基于Docker官方提供的DockerRegistry来实现。 官网地址：https://hub.docker.com/_/registry 3.1.简化版镜像仓库Docker官方的Docker Registry是一个基础版本的Docker镜像仓库，具备仓库管理的完整功能，但是没有图形化界面。 搭建方式比较简单，命令如下： docker run -d \\ --restart=always \\ --name registry \\ -p 5000:5000 \\ -v registry-data:/var/lib/registry \\ registry 命令中挂载了一个数据卷registry-data到容器内的/var/lib/registry 目录，这是私有镜像库存放数据的目录。 访问http://YourIp:5000/v2/_catalog 可以查看当前私有镜像服务中包含的镜像 3.2.带有图形化界面版本使用DockerCompose部署带有图象界面的DockerRegistry，命令如下： version: &#39;3.0&#39; services: registry: image: registry volumes: - ./registry-data:/var/lib/registry ui: image: joxit/docker-registry-ui:static ports: - 8080:80 environment: - REGISTRY_TITLE=传智教育私有仓库 - REGISTRY_URL=http://registry:5000 depends_on: - registry 3.3.配置Docker信任地址我们的私服采用的是http协议，默认不被Docker信任，所以需要做一个配置： # 打开要修改的文件 vi /etc/docker/daemon.json # 添加内容： &quot;insecure-registries&quot;:[&quot;http://192.168.150.101:8080&quot;] # 重加载 systemctl daemon-reload # 重启docker systemctl restart docker","categories":[],"tags":[],"keywords":[]},{"title":"Hello","slug":"Test","date":"2022-03-09T12:58:01.862Z","updated":"2022-03-09T02:43:29.424Z","comments":true,"path":"2022/03/09/Test/","link":"","permalink":"/2022/03/09/Test/","excerpt":"","text":"前往github yml java public static void mian(String[] args){ }","categories":[],"tags":[],"keywords":[]},{"title":"Hello World","slug":"hello-world","date":"2022-03-09T12:40:41.654Z","updated":"2022-03-09T12:40:41.654Z","comments":true,"path":"2022/03/09/hello-world/","link":"","permalink":"/2022/03/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"Hexo","slug":"index","date":"2018-12-12T14:16:01.000Z","updated":"2022-03-09T02:41:52.946Z","comments":true,"path":"2018/12/12/index/","link":"","permalink":"/2018/12/12/index/","excerpt":"","text":"","categories":[],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/tags/悦读/"}],"keywords":[]}]}